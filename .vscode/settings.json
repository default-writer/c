{
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.enableFileLinks": "on",
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "/bin/bash"
    }
  },
  "testFilesOnSave.enabled": true,
  "testFilesOnSave.languageId": "any",
  "testFilesOnSave.testCommands": [
    {
      "c": "./bin/src.sh --target ${relativeFile} --gc --sanitize"
    },
    {
      "h": "./bin/docs.sh"
    }
  ],
  "koverage.coverageFileNames": ["lcov.info"],
  "coverage-gutters.coverageFileNames": ["lcov.info"],
  "coverage-gutters.coverageBaseDir": "coverage",
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showGutterCoverage": false,
  "cSpell.checkOnlyEnabledFileTypes": true,
  "cSpell.enableFiletypes": ["c", "!jsonc"],
  "files.autoSave": "off",
  "files.associations": {
    "*.h": "c",
    "*.c": "c"
  },
  "files.watcherInclude": ["."],
  "files.exclude": {},
  "pdf-preview.default.scale": "page-fit",
  "cmake.showConsoleAutomatically": true,
  "cmake.configureOnStart": true,
  "cmake.sourceDirectory": "${workspaceFolder}",
  "cmake.buildDirectory": "${workspaceFolder}/cmake",
  "cmake.ignoreCMakeListsMissing": true,
  "cmake.configureOnOpen": true,
  "cmake.configureOnEdit": true,
  "cmake.statusbar.visibility": "compact",
  "cmake.reconfigureOnChange": true,
  "DockerRun.DisableAutoGenerateConfig": true,
  "disasexpl.associations": {
    "**/*.c": "${workspaceFolder}/${relativeFileDirname}/${fileBasenameNoExtension}.c.s",
    "**/*.cpp": "${workspaceFolder}/${relativeFileDirname}/${fileBasenameNoExtension}.c.s"
  },
  "lldb.displayFormat": "auto",
  "lldb.showDisassembly": "auto",
  "lldb.dereferencePointers": true,
  "lldb.consoleMode": "commands",
  "statusbar_command.commands": [
    {
      "text": ".S",
      "tooltip": "Show disassembly",
      "alignment": "right",
      "priority": 1000,
      "id": "statusbar.disassembly",
      "name": "disassembly",
      "filterFileName": "^.*\\.[c|h]$",
      "command": "disasexpl.show"
    },
    {
      "text": ".c",
      "tooltip": "Toggle code coverage OFF",
      "alignment": "right",
      "priority": 1000,
      "id": "statusbar.coverage.off",
      "command": "code-coverage.hide"
    },
    {
      "text": ".C",
      "tooltip": "Toggle code coverage ON",
      "alignment": "right",
      "priority": 1001,
      "id": "statusbar.coverage.on",
      "command": "code-coverage.show"
    },
    {
      "text": ".H",
      "tooltip": "Toggle clandg inlay type hints ON/OFF",
      "alignment": "right",
      "priority": 1002,
      "id": "statusbar.inlayHints.toggle",
      "command": "clangd.inlayHints.toggle"
    },
    {
      "text": ".T",
      "tooltip": "Open twitch chat",
      "alignment": "right",
      "priority": 1003,
      "id": "statusbar.twitch.open",
      "command": "twitch.open"
    },
    {
      "text": ".P",
      "tooltip": "Presentation mode switch",
      "alignment": "right",
      "priority": 1004,
      "id": "statusbarpresentation-mode.toggle",
      "command": "presentation-mode.toggle"
    }
  ],
  "workbench.editor.enablePreview": true,
  "workbench.colorTheme": "Yitzchok (rainglow)",
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "comment",
        "settings": {
          "foreground": "#70a870",
          "fontStyle": "bold"
        }
      },
      {
        "scope": "comment.block",
        "settings": {
          "foreground": "#70a870"
        }
      },
      {
        "scope": "comment.line",
        "settings": {
          "foreground": "#70a870",
          "fontStyle": "bold"
        }
      }
    ]
  },
  "customPresentationMode.overrides": {
    "editor.fontWeight": "normal",
    "window.zoomLevel": 2,
    "workbench.colorTheme": "Yitzchok (rainglow)"
  },
  "sonarlint.testFilePattern": "{**/test/**,**/*test*,**/*Test*,**/rexo/**}",
  "sonarlint.pathToCompileCommands": "${workspaceFolder}/config/compile_commands.json",
  "editor.useTabStops": false,
  "editor.insertSpaces": true,
  "editor.dropIntoEditor.enabled": true,
  "editor.trimAutoWhitespace": true,
  "workbench.editor.restoreViewState": true,
  "workbench.editor.autoLockGroups": {
    "default": true,
    "hexEditor.hexedit": false,
    "workbench.editorinputs.searchEditorInput": false,
    "workbench.editor.chatSession": false,
    "imagePreview.previewEditor": false,
    "vscode.audioPreview": false,
    "vscode.videoPreview": false,
    "jsProfileVisualizer.cpuprofile.table": false,
    "jsProfileVisualizer.heapprofile.table": false,
    "pdf.view": false,
    "workbench.editors.gettingStartedInput": false,
    "jupyter-notebook": false,
    "terminalEditor": true,
    "workbench.input.interactive": false,
    "mainThreadWebview-markdown.preview": false
  },
  "editor.matchBrackets": "near",
  "presentation-mode.active": {
    "commands": [],
    "editor.fontSize": 12,
    "editor.matchBrackets": "near",
    "editor.minimap.enabled": false,
    "workbench.activityBar.visible": true,
    "workbench.statusBar.visible": true,
    "workbench.colorTheme": "Yitzchok (rainglow)",
    "workbench.colorCustomizations": {
      "[Yitzchok (rainglow)]": {}
    },
    "window.zoomLevel": 2
  },
  "presentation-mode.inactive": {
    "window.zoomLevel": 0
  },
  "presentation-mode.configBackup": {
    "editor.fontSize": 12,
    "editor.matchBrackets": "near"
  },
  "grammarly.files.include": ["**/*.md"],
  "grammarly.files.exclude": ["**/*.txt"],
  "C_Cpp.dimInactiveRegions": true,
  "C_Cpp.errorSquiggles": "disabled",
  "C_Cpp.intelliSenseEngine": "disabled",
  "C_Cpp.default.cStandard": "c89",
  "cmake.allowUnsupportedPresetsVersions": true,
  "cmake.debugConfig": {
    "MIMode": "gdb",
    "miDebuggerPath": "/usr/bin/gdb",
    "setupCommands": [
      {
        "description": "Enable pretty-printing for lldb",
        "text": "-enable-pretty-printing",
        "ignoreFailures": true
      }
    ],
    "console": "integratedTerminal",
    "cwd": "${workspaceRoot}/cmake",
    "environment": [
      {
        "name": "UI_MODE",
        "value": "--ui"
      }
    ]
  },
  "cmake.autoSelectActiveFolder": true,
  "cmake.default.generator": "Ninja",
  "cmake.buildBeforeRun": true,
  "cmake.defaultVariants": {
    "settings": {
      "communicationMode": "automatic",
      "useCMakePresets": "auto",
      "configureOnOpen": true
    },
    "buildType": {
      "default": "debug",
      "description": "The build type.",
      "choices": {
        "debug": {
          "short": "Debug",
          "long": "Disable optimizations - include debug information.",
          "buildType": "Debug",
          "settings": {
            "CONFIG_GC": "1"
          }
        },
        "release": {
          "short": "Release",
          "long": "Optimize for speed - exclude debug information.",
          "buildType": "Release"
        },
        "minsize": {
          "short": "MinSizeRel",
          "long": "Optimize for smallest binary size - exclude debug information.",
          "buildType": "MinSizeRel"
        },
        "reldeb": {
          "short": "RelWithDebInfo",
          "long": "Optimize for speed - include debug information.",
          "buildType": "RelWithDebInfo"
        }
      }
    }
  },
  "cmake.default.buildDirectory": "${workspaceFolder}/cmake",
  "cmake.cpptools.guessSourceFileConfigurations": true,
  "cmake.enabledOutputParsers": [
    "cmake",
    "gcc",
    "gnuld",
    "msvc",
    "ghs",
    "diab"
  ],
  "editor.formatOnSave": true,
  "editor.fontWeight": "normal",
  "cmake.additionalKits": ["${workspaceFolder}/.vscode", "${workspaceFolder}"],
  "cmake.useCMakePresets": "always",
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.clang-format$",
        "isAsync": true,
        "cmd": "./bin/format.sh --all"
      }
    ]
  },
  "editor.defaultFormatter": "trunk.io",
  "[c]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "[shellscript]": {
    "editor.defaultFormatter": null,
    "files.encoding": "utf8",
    "files.eol": "\n"
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.hg/store/**": true,
    "**/.deps/**": true,
    "**/cmake/**": true,
    "**/buils/**": true,
    "**/config/**": true,
    "**/logs/**": true,
    "**/gtk/**": true
  },
  "cmake.configureArgs": [
    // "CONFIG_MEMORY_DEBUG_INFO",
    "CONFIG_MEMORY_CLEANUP",
    "CONFIG_GC",
    "CODE_SANITIZER"
  ],
  /* https://manpages.ubuntu.com/manpages/jammy/man1/clangd-11.1.html */
  "clangd.arguments": [
    "--compile-commands-dir=${workspaceFolder}/src",
    "-j=8",
    "--limit-results=0",
    "--background-index",
    "--all-scopes-completion",
    "--log=info",
    "--pch-storage=memory",
    "--clang-tidy",
    "--fallback-style=WebKit"
  ],
  "clangd.path": "${workspaceFolder}/.tools/clangd_16.0.2/bin/clangd",
  "clangd.checkUpdates": true,
  "clangd.restartAfterCrash": true,
  "clangd.onConfigChanged": "restart",
  "clangd.detectExtensionConflicts": true,
  "clangd.defaultProfile": "C++ WSL/containers",
  "clang-format.style": "{BasedOnStyle: WebKit, IndentWidth: 4, BreakBeforeBraces: Attach}",
  "clang-format.language.c.enable": true,
  "clang-tidy.lintOnSave": true,
  "clang-tidy.compilerArgs": ["-I/usr/include/gtk-4.0"],
  "editor.tabSize": 4,
  "editor.indentSize": "tabSize",
  "editor.fontSize": 12,
  "screencastMode.fontSize": 20,
  "window.zoomLevel": 0,
  "editor.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "editor.inlayHints.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "editor.codeLensFontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "editor.fontLigatures": true,
  "debug.console.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "debug.console.fontSize": 12,
  "scm.inputFontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "chat.editor.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "chat.editor.fontSize": 12,
  "notebook.output.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "terminal.integrated.fontFamily": "'ProggyVector', 'Ubuntu Mono', 'monospace', monospace",
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.enablePersistentSessions": true,
  "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose",
  "terminal.integrated.shellIntegration.history": 1000,
  "markdown.preview.fontSize": 12,
  "cmake.generator": "Ninja",
  "C_Cpp.default.cppStandard": "c++98",
  "C_Cpp.clang_format_fallbackStyle": "{BasedOnStyle: WebKit, IndentWidth: 4, BreakBeforeBraces: Attach}",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.intelliSenseEngineFallback": "enabled",
  "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
  "interactiveSession.editor.fontSize": 12,
  "scm.inputFontSize": 12,
  "workbench.editorLargeFileConfirmation": 16,
  "terminal.integrated.tabStopWidth": 8,
  "fileHeaderComment.parameter": {
    "*": {
      "commentbegin": "/*",
      "commentprefix": " *",
      "commentend": " */",
      "author": "Artur Mustafin",
      "license_mit": [
        "MIT License",
        "",
        " Copyright (c) ${year} ${author}",
        "",
        " Permission is hereby granted, free of charge, to any person obtaining a copy",
        " of this software and associated documentation files (the \"Software\"), to deal",
        " in the Software without restriction, including without limitation the rights",
        " to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",
        " copies of the Software, and to permit persons to whom the Software is",
        " furnished to do so, subject to the following conditions:",
        "",
        " The above copyright notice and this permission notice shall be included in all",
        " copies or substantial portions of the Software.",
        "",
        " THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
        " IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
        " FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
        " AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
        " LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
        " OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",
        " SOFTWARE."
      ]
    }
  },
  "fileHeaderComment.template": {
    "*": [
      "${commentbegin}",
      "${commentprefix}",
      "${commentprefix} ${license_mit}",
      "${commentprefix}",
      "${commentend}"
    ]
  },
  "git.suggestSmartCommit": false,
  "[jsonc]": {
    "editor.defaultFormatter": "trunk.io"
  },
  "files.refactoring.autoSave": false,
  "editor.fontVariations": false,
  "editor.minimap.enabled": false,
  "workbench.activityBar.visible": true,
  "workbench.statusBar.visible": true,
  "workbench.colorCustomizations": {
    "[Yitzchok (rainglow)]": {}
  },
  "workbench.quickOpen.closeOnFocusLost": false,
  "twitch.fontSize": "12px",
  "pdf-preview.default.sidebar": true,
  "workbench.preferredDarkColorTheme": "Yitzchok (rainglow)",
  "workbench.preferredHighContrastColorTheme": "Yitzchok Contrast (rainglow)",
  "workbench.preferredLightColorTheme": "Yitzchok Light (rainglow)",
  "window.autoDetectColorScheme": true,
  "diffEditor.codeLens": true,
  "editor.find.autoFindInSelection": "multiline",
  "diffEditor.experimental.showEmptyDecorations": false,
  "editor.find.seedSearchStringFromSelection": "selection",
  "search.seedOnFocus": true,
  "search.seedWithNearestWord": true
}
